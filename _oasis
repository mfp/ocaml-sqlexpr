OASISFormat: 0.3
Name:        ocaml-sqlexpr
Version:     0.6.0
Synopsis:    Type-safe, convenient SQLite database access.
Authors:     Mauricio Fernandez <mfp@acm.org>
Maintainers: Mauricio Fernandez <mfp@acm.org>
License:     LGPL-2.1 with OCaml linking exception
Plugins:     DevFiles (0.3), META (0.3)
BuildTools:  ocamlbuild
Homepage:    http://github.com/mfp/ocaml-sqlexpr
Description:
  Minimalistic library and syntax extension for type-safe, convenient execution
  of SQL statements. Currently compatible with Sqlite3.
  .
  Sqlexpr features:
  .
  * automated prepared statement caching, param binding, data extraction, error
    checking (including automatic stmt reset to avoid BUSY/LOCKED errors in
    subsequent queries), stmt finalization on db close, etc.
  .
  * HOFs like iter, fold, transaction
  .
  * support for different concurrency models: everything is functorized over a
    THREAD monad, so you can for instance do concurrent folds/iters with Lwt
  .
  * support for SQL stmt syntax checks and some extra semantic checking (column
    names, etc)

SourceRepository github
  Type:     git
  Location: git://github.com/mfp/ocaml-sqlexpr.git

Library sqlexpr
  Path:             src
  BuildTools:       ocamlbuild
  Modules:          Sqlexpr_concurrency,
                    Sqlexpr_sqlite,
                    Sqlexpr_sqlite_lwt
  InternalModules:  Sqlexpr_utils
  BuildDepends:     csv, sqlite3, estring, lwt (>= 2.2.0), lwt.syntax, lwt.unix,
                    unix, threads
  XMETADescription: SQLite database access.

Library "sqlexpr_syntax"
  Path:             src/syntax/
  FindlibName:      syntax
  FindlibParent:    sqlexpr
  Modules:          Pa_sql
  BuildDepends:     camlp4.lib, camlp4.quotations.r, estring
  XMETADescription: Syntax extension for SQL statements/expressions
  XMETAType:        syntax
  XMETARequires:    camlp4, estring

Library "ppx"
  Path:             src/ppx/
  FindlibName:      ppx
  FindlibParent:    sqlexpr
  XMETADescription: PPX extension for SQL statements/expressions
  XMETARequires:    sqlexpr
  XMETAExtraLines:  ppx = "ppx_sqlexpr"

Executable "ppx_sqlexpr"
  Path:             src/ppx/
  MainIs:           ppx_sqlexpr.ml
  BuildDepends:     unix, re.pcre, compiler-libs.common, ppx_tools.metaquot
  CompiledObject:   best
  Install:          true

Executable "example"
  Path:             tests/
  MainIs:           example.ml
  BuildDepends:     sqlexpr.syntax, sqlexpr
  CompiledObject:   best
  Install:          false
  Build:            false  # FIXME

Document sqlexpr
    Title:                API reference for Sqlexpr
    Type:                 ocamlbuild (0.3)
    InstallDir:           $htmldir/sqlexpr
    BuildTools+:          ocamldoc
    XOCamlbuildPath:      .
    XOCamlbuildLibraries: sqlexpr
